{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/components/PostList/style.ts","webpack:///./src/components/PostList/index.tsx"],"names":["BlogIndex","data","title","small","posts","allMarkdownRemark","nodes","map","node","slug","fields","frontmatter","meta","dateTime","date","dateStr","excerpt","to","pageQuery","PostList","styled","ul","PostItem","li","SpaceUnit","PostTitle","h2","Colors","Primary","PostMeta","div","Gray","PostSummary","p","Black","Widths","Tablet","id","key","className","dangerouslySetInnerHTML","__html"],"mappings":"2FAAA,kJA4DeA,UAjCU,SAAC,GAAgB,IAAdC,EAAc,EAAdA,KAC1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,MACX,kBAAC,IAAD,CAAWC,OAAK,GACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOH,EAAKI,kBAAkBC,MAAMC,KAAI,SAAAC,GAAI,MAAK,CAC/CC,KAAMD,EAAKE,OAAOD,KAClBP,MAAOM,EAAKG,YAAYT,MACxBU,KACE,0BAAMC,SAAUL,EAAKE,OAAOI,MAAON,EAAKE,OAAOK,SAEjDC,QAASR,EAAKQ,cAGlB,kBAAC,OAAD,CAAMC,GAAG,cAAT,WAmBH,IAAMC,EAAY,c,+FC3DZC,EAAWC,IAAOC,GAAV,sEAAGD,CAAH,gCAKRE,EAAWF,IAAOG,GAAV,sEAAGH,CAAH,6EAITI,YAAU,IAKTC,EAAYL,IAAOM,GAAV,uEAAGN,CAAH,iCACXO,IAAOC,QACCJ,eAGNK,EAAWT,IAAOU,IAAV,sEAAGV,CAAH,eACVO,IAAOI,MAGLC,EAAcZ,IAAOa,EAAV,yEAAGb,CAAH,kFACbO,IAAOO,MAEUC,IAAOC,QCWpBjB,IA1BS,SAAC,GAAc,IAAZf,EAAY,EAAZA,MACzB,OACE,kBAAC,EAAD,CAAiBiC,GAAG,aACjBjC,EAAMG,KAAI,YAAoC,IAAjCL,EAAiC,EAAjCA,MAAOO,EAA0B,EAA1BA,KAAMG,EAAoB,EAApBA,KAAMI,EAAc,EAAdA,QAC/B,OACE,kBAAC,EAAD,CAAiBsB,IAAK7B,GACpB,kBAAC,OAAD,CAAMQ,GAAIR,GACR,kBAAC,EAAD,CAAkB8B,UAAU,mBACzBrC,GAEFU,GAAQ,kBAAC,EAAD,KAAkBA,GAC1BI,GACC,kBAAC,EAAD,CACEwB,wBAAyB,CACvBC,OAAQzB","file":"component---src-pages-index-tsx-4a6393a3031eecbb5bf7.js","sourcesContent":["import { graphql, Link, PageProps } from \"gatsby\"\nimport React, { FC } from \"react\"\nimport Icon from \"../components/icon\"\nimport { IconType } from \"../components/Icon/style\"\nimport { HomeLayout } from \"../components/layout\"\nimport PostList, { PostItemType } from \"../components/PostList\"\nimport Section from \"../components/Section\"\nimport SEO from \"../components/seo\"\nimport { MarkdownRemark } from \"../models/markdown-remark\"\nimport { Container } from \"../styles/style-variables\"\n\n// const videos: PostItemType[] = [\n//   {\n//     title: \"프론트엔드 개발환경의 이해와 실습\",\n//     slug: \"https://www.inflearn.com/course/프론트엔드-개발환경\",\n//     meta: \"2020년 03월 / 인프런\",\n//   },\n//   {\n//     title: \"Express.js 코드리딩\",\n//     slug:\n//       \"https://www.youtube.com/playlist?list=PL91ve-iBgvZ5ga1BQkN2DLJgqBfWCkGfm\",\n//     meta: \"2019년 03월 / 유투브\",\n//   },\n// ]\n\ntype P = PageProps<{ allMarkdownRemark: { nodes: MarkdownRemark[] } }>\n\nconst BlogIndex: FC<P> = ({ data }: P) => {\n  return (\n    <HomeLayout>\n      <SEO title=\"홈\" />\n      <Container small>\n        <Section>\n          <PostList\n            posts={data.allMarkdownRemark.nodes.map(node => ({\n              slug: node.fields.slug,\n              title: node.frontmatter.title,\n              meta: (\n                <time dateTime={node.fields.date}>{node.fields.dateStr}</time>\n              ),\n              excerpt: node.excerpt,\n            }))}\n          />\n          <Link to=\"/category/\">더보기</Link>\n        </Section>\n        {/* <Section\n          title={\n            <>\n              <Icon type={IconType.Video} size={4} />\n              <span id=\"videos\">VIDEOS</span>\n            </>\n          }\n        >\n          <PostList posts={videos} />\n        </Section> */}\n      </Container>\n    </HomeLayout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: fields___date, order: DESC }, limit: 10) {\n      nodes {\n        excerpt(pruneLength: 200, format: PLAIN, truncate: true)\n        fields {\n          slug\n          dateStr: date(formatString: \"YYYY년 MM월 DD일\")\n          date\n        }\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n`\n","import styled from \"styled-components\"\nimport { Colors, SpaceUnit, Widths } from \"../../styles/style-variables\"\n\nexport const PostList = styled.ul`\n  list-style: none;\n  padding: 0;\n`\n\nexport const PostItem = styled.li`\n  a {\n    text-decoration: none;\n  }\n  margin: ${SpaceUnit(7)} 0;\n  text-decoration: none;\n  display: block;\n`\n\nexport const PostTitle = styled.h2`\n  color: ${Colors.Primary};\n  margin-bottom: ${SpaceUnit()};\n`\n\nexport const PostMeta = styled.div`\n  color: ${Colors.Gray};\n`\n\nexport const PostSummary = styled.p`\n  color: ${Colors.Black};\n  line-height: 1.5em;\n  @media (max-width: calc(${Widths.Tablet} - 1px)) {\n    display: none;\n  }\n`\n","import { Link } from \"gatsby\"\nimport React, { FC, ReactNode } from \"react\"\nimport * as Styled from \"./style\"\n\nexport interface PostItemType {\n  title: ReactNode\n  slug: string\n  meta?: ReactNode\n  excerpt?: string\n}\nexport interface P {\n  posts: PostItemType[]\n}\n\nconst PostList: FC<P> = ({ posts }) => {\n  return (\n    <Styled.PostList id=\"post-list\">\n      {posts.map(({ title, slug, meta, excerpt }) => {\n        return (\n          <Styled.PostItem key={slug}>\n            <Link to={slug}>\n              <Styled.PostTitle className=\"post-item-title\">\n                {title}\n              </Styled.PostTitle>\n              {meta && <Styled.PostMeta>{meta}</Styled.PostMeta>}\n              {excerpt && (\n                <Styled.PostSummary\n                  dangerouslySetInnerHTML={{\n                    __html: excerpt,\n                  }}\n                />\n              )}\n            </Link>\n          </Styled.PostItem>\n        )\n      })}\n    </Styled.PostList>\n  )\n}\n\nexport default PostList\n"],"sourceRoot":""}