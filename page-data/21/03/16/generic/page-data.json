{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/21/03/16/generic","result":{"data":{"site":{"siteMetadata":{"title":"IT퍼포머","url":"https://joshua-moon.github.io"}},"markdownRemark":{"id":"bf837f58-e74d-5523-b3ca-42989cfa5479","excerpt":"웹상에서 필요한 자료를 찾다 제네릭에 사용되는 표시를 마주치면, 부끄럽게도 '저건 언제 사용하는거지?'라는 궁금증이 들었다가도 바빠서 그냥 넘어간 경험이 몇 번 있다.\n감사하게도 이번에 이 Generic으로 인해 코드가 줄어드는 경험을 하게 되어 기록으로 남긴다.  기존 코드  이렇게…","html":"<p>웹상에서 필요한 자료를 찾다 제네릭에 사용되는 <code class=\"language-text\">&lt;T&gt;</code>표시를 마주치면,<br>\n부끄럽게도 '저건 언제 사용하는거지?'라는 궁금증이 들었다가도 바빠서 그냥 넘어간 경험이 몇 번 있다.\n감사하게도 이번에 이 Generic으로 인해 코드가 줄어드는 경험을 하게 되어 기록으로 남긴다.</p>\n<h1 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<h3 id=\"기존-코드\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%A1%B4-%EC%BD%94%EB%93%9C\" aria-label=\"기존 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기존 코드</h3>\n<!-- 복잡함을 피하기 위해 '타입'을 나타대는 부분은 한글로 작성하였다.   -->\n<!-- 또한 객체는 타입형은 인터페이스(interface)를, 함수는 타입별칭(type)을 사용하였다. -->\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// student.ts</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">학생이름</span> <span class=\"token punctuation\">{</span>\n  studentName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">학생나이</span> <span class=\"token punctuation\">{</span>\n  studentAge<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 설명1: '학생이름_생성' 타입은 함수형으로 인풋에 'string'타입, 아웃풋엔 '학생이름'타입이 온다.</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">학생이름_생성</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> 학생이름 <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">학생나이_생성</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> 학생나이 <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 설명2: '학생이름_생성_구현' 함수는 '학생이름_생성' 타입의 인풋과 아웃풋을 가져야 한다.</span>\n<span class=\"token keyword\">const</span> 학생이름_생성_구현<span class=\"token operator\">:</span> <span class=\"token function-variable function\">학생이름_생성</span> <span class=\"token operator\">=</span> name <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> studentName<span class=\"token operator\">:</span> name <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> 학생나이_생성_구현<span class=\"token operator\">:</span> <span class=\"token function-variable function\">학생나이_생성</span> <span class=\"token operator\">=</span> age <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> studentAge<span class=\"token operator\">:</span> age <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"-1\" style=\"position:relative;\"><a href=\"#-1\" aria-label=\" 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p>이렇게 작성하여 타입의 제한을 뒀는데, 문제는 학생 관련 정보(ex: 학생이메일, 주소, 전화번호 등등)를 하나 생성 할 때마다 <code class=\"language-text\">interface</code>, <code class=\"language-text\">type</code>, <code class=\"language-text\">const 함수</code> 이렇게 3개씩 늘어난다는 것이다.<br>\n제네릭을 이용하면서 설명1 부분을 생략할 수 있게 됐다.</p>\n<h1 id=\"-2\" style=\"position:relative;\"><a href=\"#-2\" aria-label=\" 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<h3 id=\"제네릭-적용-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EB%84%A4%EB%A6%AD-%EC%A0%81%EC%9A%A9-%EC%BD%94%EB%93%9C\" aria-label=\"제네릭 적용 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제네릭 적용 코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// generic.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">Pipe<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">U</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>input<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">U</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// student.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Pipe <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./generic\"</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">학생이름</span> <span class=\"token punctuation\">{</span>\n  studentName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">학생나이</span> <span class=\"token punctuation\">{</span>\n  studentAge<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> 학생이름_생성_구현<span class=\"token operator\">:</span> Pipe<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> 학생이름_생성<span class=\"token operator\">></span> <span class=\"token operator\">=</span> name <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> studentName<span class=\"token operator\">:</span> name <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> 학생나이_생성_구현<span class=\"token operator\">:</span> Pipe<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> 학생나이_생성<span class=\"token operator\">></span> <span class=\"token operator\">=</span> age <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> studentAge<span class=\"token operator\">:</span> age <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","fields":{"dateStr":"2021년 03월 16일","date":"2021-03-16T00:00:00.000Z","slug":"/21/03/16/generic"},"frontmatter":{"title":"타입스크립트 제네릭의 장점을 캐치하다","tags":["typescript"],"featured_image":null,"featuredImage":null},"tableOfContents":"<ul>\n<li><a href=\"#%EA%B8%B0%EC%A1%B4-%EC%BD%94%EB%93%9C\">기존 코드</a></li>\n<li><a href=\"#%EC%A0%9C%EB%84%A4%EB%A6%AD-%EC%A0%81%EC%9A%A9-%EC%BD%94%EB%93%9C\">제네릭 적용 코드</a></li>\n</ul>"},"allMarkdownRemark":{"nodes":[{"id":"13b3e00a-723f-50d5-91d2-79d253b77ad0","fields":{"slug":"/21/03/09/my-first-blog.html","date":"2021-03-09T00:00:00.000Z"}},{"id":"bf837f58-e74d-5523-b3ca-42989cfa5479","fields":{"slug":"/21/03/16/generic","date":"2021-03-16T00:00:00.000Z"}}]}},"pageContext":{"slug":"/21/03/16/generic","date":"2021-03-16T00:00:00.000Z","previous":{"fields":{"slug":"/21/03/09/my-first-blog.html","date":"2021-03-09T00:00:00.000Z","beforeGatsby":false},"frontmatter":{"title":"나에겐 기념적인 첫 포스트","category":"think","permalink":"21/03/09/my-first-blog.html"}},"next":null}},"staticQueryHashes":["1591182808"]}